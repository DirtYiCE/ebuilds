--- inkscape-0.92.4/src/extension/internal/pdfinput/pdf-parser.cpp.orig	2022-09-09 13:19:10.009600536 +0200
+++ inkscape-0.92.4/src/extension/internal/pdfinput/pdf-parser.cpp	2022-09-09 13:19:35.150690911 +0200
@@ -705,7 +705,7 @@
       _POPPLER_FREE(obj);
     }
   }
-  state->setLineDash(dash, length, args[1].getNum());
+  state->setLineDash({dash, dash+length}, args[1].getNum());
   builder->updateStyle(state);
 }
 
--- inkscape-0.92.4/src/extension/internal/pdfinput/svg-builder.cpp.orig	2022-09-09 13:19:44.204363360 +0200
+++ inkscape-0.92.4/src/extension/internal/pdfinput/svg-builder.cpp	2022-09-09 13:21:53.338692558 +0200
@@ -359,15 +359,13 @@
     sp_repr_css_set_property(css, "stroke-miterlimit", os_ml.str().c_str());
 
     // Line dash
-    double *dash_pattern;
-    int dash_length;
     double dash_start;
-    state->getLineDash(&dash_pattern, &dash_length, &dash_start);
-    if ( dash_length > 0 ) {
+    auto& dash_pattern = state->getLineDash(&dash_start);
+    if ( dash_pattern.size() > 0 ) {
         Inkscape::CSSOStringStream os_array;
-        for ( int i = 0 ; i < dash_length ; i++ ) {
+        for ( int i = 0 ; i < dash_pattern.size(); i++ ) {
             os_array << dash_pattern[i];
-            if (i < (dash_length - 1)) {
+            if (i < (dash_pattern.size() - 1)) {
                 os_array << ",";
             }
         }
