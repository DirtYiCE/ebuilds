diff --git a/third_party/blink/renderer/core/dom/node.cc b/third_party/blink/renderer/core/dom/node.cc
index f1e42bf7b75e1..00aabc6e7774a 100644
--- a/third_party/blink/renderer/core/dom/node.cc
+++ b/third_party/blink/renderer/core/dom/node.cc
@@ -1688,8 +1688,6 @@ bool Node::CanStartSelection() const {
   if (GetLayoutObject()) {
     const ComputedStyle& style = GetLayoutObject()->StyleRef();
     EUserSelect user_select = style.UsedUserSelect();
-    if (user_select == EUserSelect::kNone)
-      return false;
     // We allow selections to begin within |user-select: text/all| sub trees
     // but not if the element is draggable.
     if (style.UserDrag() != EUserDrag::kElement &&
diff --git a/third_party/blink/renderer/core/frame/smart_clip.cc b/third_party/blink/renderer/core/frame/smart_clip.cc
index fc9d7af01b3c4..d6ee00c31e4f2 100644
--- a/third_party/blink/renderer/core/frame/smart_clip.cc
+++ b/third_party/blink/renderer/core/frame/smart_clip.cc
@@ -235,10 +235,6 @@ String SmartClip::ExtractTextFromNode(Node* node) {
 
   StringBuilder result;
   for (Node& current_node : NodeTraversal::InclusiveDescendantsOf(*node)) {
-    const ComputedStyle* style = current_node.GetComputedStyle();
-    if (!style || style->UsedUserSelect() == EUserSelect::kNone)
-      continue;
-
     if (Node* node_from_frame = NodeInsideFrame(&current_node))
       result.Append(ExtractTextFromNode(node_from_frame));
 
diff --git a/third_party/blink/renderer/core/style/computed_style.h b/third_party/blink/renderer/core/style/computed_style.h
index 5bbddd7f90570..e72d0191753ee 100644
--- a/third_party/blink/renderer/core/style/computed_style.h
+++ b/third_party/blink/renderer/core/style/computed_style.h
@@ -2264,8 +2264,7 @@ class ComputedStyle : public ComputedStyleBase,
   }
 
   bool IsSelectable() const {
-    return !IsInert() && !(UserSelectInternal() == EUserSelect::kNone &&
-                           UserModifyInternal() == EUserModify::kReadOnly);
+    return !IsInert();
   }
 
   bool IsFocusable() const {
